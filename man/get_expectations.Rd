% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_expectations.R
\name{get_expectations}
\alias{get_expectations}
\title{Extract Expectation Details from a Test File}
\usage{
get_expectations(test_file)
}
\arguments{
\item{test_file}{A string specifying the path to the test file to be analyzed.}
}
\value{
A data frame with columns \code{test_file}, \code{call}, and \code{string}, where
\code{test_file} is the name of the test file, \code{call} is the \code{expect_}
function call, and \code{string} identifies if the \code{expect_} function
creates a snapshot. If no \code{expect_} calls are found or if the file
does not exist, the function returns an invisible empty result.
}
\description{
\code{get_expectations()} reads a specified test file and extracts detailed
information about each \code{expect_} function call.
}
\section{More Information}{

\code{get_expectations()} function first checks for the existence of the test file
and then scans for \code{expect_} function calls. It utilizes regular expressions
for pattern matching and iterates over each expectation to construct a
detailed summary. \code{get_expectations()} uses \code{read_test_file()} to read the
contents of the test file and \code{extract_expects()} to identify \code{expect_}
function calls. \code{get_expectations()} returns a data frame containing details
about each expectation call.
}

\examples{
get_expectations(test_file = system.file("tests", "testthat",
                                          "test-rev_string.R",
                                          package = "pickler"))
}
\seealso{
\code{\link{read_test_file}} for reading test file contents and
\code{\link{extract_expects}} for extracting \code{expect_} calls from test
content.
}
